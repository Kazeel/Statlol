{
    "collab_server" : "",
    "contents" : "#############################\n# Algorithme d'extraction des matchs d'une ?quipe\n###########################\n#\n#\n#\n#\n###########################\n# Donn?es utilisateurs & sourcing\n##########################\n#\n#\n#\n############################\n\nserveur <- \"euw1\"\nkey    <- \"RGAPI-d64fc2d0-e746-4457-92fe-f707bc02bc36\"\n\n############################\n# Donn?es joueurs\n############################\n# Penser ? retirer les espaces\n#\n#\n############################\n\npseudo_top <- \"RKSReidoz\"\npseudo_jun <- \"Kazeel\"\npseudo_mid <- \"Mashu\"\npseudo_adc <- \"RedWhale\"\npseudo_sup <- \"\"\n\n###########################\n# Generation de la liste des joueurs et de leurs account.id\n###########################\n#\n#\n#\n###############################\n\npseudos_joueurs <- c(\"TOP\"= pseudo_top, \"JUN\"= pseudo_jun, \"MID\"=pseudo_mid, \"ADC\"=pseudo_adc,\"SUP\"=pseudo_sup)\nids_joueurs <- c()\nfor(i in 1:5){\n  # Si l'Id est 0 alors vous n'avez pas rentre un pseudo\n  if(pseudos_joueurs[i] != \"\" ){\n    ids_joueurs[i]<-lol.player(pseudo = pseudos_joueurs[i], serveur = serveur, key = key)[[\"accountId\"]]\n  } else{\n    ids_joueurs[i] <- 0\n  }\n}\n\ndata.pseudo_id <- data.frame(pseudos_joueurs, ids_joueurs)\n\nwrite.csv(data.pseudo_id, file = \"ids_joueurs.csv\") #Enregistrement\n\n###########################\n# R?cup?ration de la liste des matchs de chaque joueur\n###########################\n#\n#\n###############################\n\nlistes_matchs <- data.frame()\nnplayer <- 0\nfor(i in 1:5){\n  # Si l'Id est 0 alors vous n'avez pas rentr? un pseudo\n  id.loop <- data.pseudo_id[i,\"ids_joueurs\"]\n  pseudo.loop <- data.pseudo_id[i,\"pseudos_joueurs\"]\n  if(id.loop != 0 ){\n    loop.list <- lol.matchslist.r(id.loop, serveur, key)[[1]]\n    listes_matchs <- rbind(listes_matchs, loop.list)\n    nplayer <- nplayer +1\n  } \n}\ntable.list <- table(listes_matchs$gameId)\ntable.list <- table.list[table.list %in% nplayer]\nteam.games <- unique(listes_matchs[,c(1,2,5,6)])\nteam.games <- team.games[team.games$gameId %in% names(table.list),]\nwrite.csv(team.games, file = \"liste_game_team.csv\") #Enregistrement\n\n###############################\n# Obtention des tableaux des joueurs des matchs avec le nom des joueurs\n##############################\n# je n'ai pas encore g?r? les teams\n#\n#\n##############################\n\nvec.id_games <- team.games$gameId\nloop.tab <- data.frame()\n\njson.tab <- NULL\nstat.tab <- NULL\nstats.stat.tab <- NULL\n\nparticipants.tab <- NULL\nplayer.partcipants.tab <- NULL\n\nloop.merge <- NULL\nloop.tab<- NULL\n\nfor(i in 1:length(vec.id_games)){\n  id.loop <- vec.id_games[i]\n  if(id.loop != 0 ){\n    json.tab <- lol.matches(id.loop, serveur, key)\n    \n    if(json.tab$gameDuration >= 300){\n    \n      stat.tab <- json.tab[[12]]\n      stats.stat.tab <- stat.tab$stats\n      stat.tab <- cbind(stat.tab[,c(\"participantId\", \"teamId\")],stats.stat.tab)\n      names(stat.tab)[1]<- \"partcipantId\"\n      \n      participants.tab <- json.tab[[\"participantIdentities\"]]\n      player.partcipants.tab <-participants.tab$player\n      participants.tab <- cbind(participants.tab[,1], player.partcipants.tab)\n      names(participants.tab)[1]<- names(stat.tab)[1]\n      \n      loop.merge <- merge(stat.tab, participants.tab)\n      \n      duration <- rep(json.tab$gameDuration, 10)\n      loop.merge<- cbind(loop.merge, duration)\n      \n      if((i!=1)&(length(names(loop.merge))!=length(names(loop.tab)))){\n        firstInhibitorAssist <- rep(NA, nrow(loop.merge))\n        firstInhibitorKill <- rep(NA, nrow(loop.merge))\n        loop.merge <- cbind(loop.merge, firstInhibitorKill)\n        names(loop.merge)[85]<- \"firstInhibitorKill\"\n        loop.merge <- cbind(loop.merge, firstInhibitorAssist)\n        names(loop.merge)[86]<- \"firstInhibitorAssist\"\n      }\n      \n      row.names(loop.merge) <- paste(id.loop, c(0:9), sep = \"\")\n  \n      loop.tab<- rbind(loop.tab,loop.merge)\n      \n      if(i%%8 == 0){\n        Sys.sleep(10) #Tant qu'on a pas une clef normale\n      }\n    }\n  } \n}\n\nwrite.csv(loop.tab, file = \"stats_game_team.csv\") #Enregistrement\n\n#####################################################################\nvec.players <- pseudos_joueurs\ndata <- team.allstats(pseudos_joueurs, serveur, key)\n\n",
    "created" : 1506698199442.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1379762980",
    "id" : "642D659B",
    "lastKnownWriteTime" : 1508674948,
    "last_content_update" : 1508674948108,
    "path" : "~/GitHub/Statlol/algo_liste_matchs_team.R",
    "project_path" : "algo_liste_matchs_team.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}